name: Deploy Infrastructure

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Environment to run on
        options:
        - dev
        - prod
      terraform_destroy:
        type: boolean

permissions:
  id-token: write
  contents: read

jobs:
  TerraformPlan:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
    - name: Log into Azure
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        
    # - name: Cache Terraform dependencies
    #   uses: actions/cache@v3
    #   with:
    #     path: terraform/.terraform
    #     key: ${{ runner.os }}-terraform-${{ inputs.environment }}-${{ hashFiles('terraform/**/*.tf', 'terraform/**/*.tfvars') }}
    #     restore-keys: |
    #       ${{ runner.os }}-terraform-${{ inputs.environment }}-
    - name: Terraform init
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      run: | 
        cd terraform
        terraform init \
        -backend-config="resource_group_name=${{inputs.environment}}-rg" \
        -backend-config="storage_account_name=${{inputs.environment}}tfstatetesting" \
        -backend-config="container_name=${{inputs.environment}}-tfstate" \
        -backend-config="key=${{inputs.environment}}-terraform-tfstate"
    - name: Terraform Plan
      if: inputs.terraform_destroy == false
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      run: |
        cd terraform
        terraform plan --var-file="${{ inputs.environment }}.tfvars" -out=tf.plan
    - name: Terraform Plan Destroy
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      if: inputs.terraform_destroy == true
      run: |
        cd terraform
        terraform plan --var-file="${{ inputs.environment }}.tfvars" --destroy -out=tf.plan
        echo "testing ls"
        ls

    - name: Upload tf plan
      uses: actions/upload-artifact@v4
      with:
        name: tf.plan
        path: ./terraform/tf.plan
      
  TerraformApply:
    runs-on: ubuntu-latest
    needs: TerraformPlan
    environment: ${{ inputs.environment }}

    steps: 
    - name: Checkout repo
      uses: actions/checkout@v4
    - name: Log into Azure
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    - name: Download tf plan
      uses: actions/download-artifact@v4
      with:
        name: tf.plan

    # - name: Restore Terraform dependencies
    #   uses: actions/cache@v3
    #   with:
    #     path: terraform/.terraform
    #     key: ${{ runner.os }}-terraform-${{ inputs.environment }}-${{ hashFiles('terraform/**/*.tf', 'terraform/**/*.tfvars') }}
    #     restore-keys: |
    #       ${{ runner.os }}-terraform-${{ inputs.environment }}-

    - name: Terraform init
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      run: | 
        cd terraform
        terraform init \
        -backend-config="resource_group_name=${{inputs.environment}}-rg" \
        -backend-config="storage_account_name=${{inputs.environment}}tfstatetesting" \
        -backend-config="container_name=${{inputs.environment}}-tfstate" \
        -backend-config="key=${{inputs.environment}}-terraform-tfstate"

    - name: Terraform Apply
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      run: |
        cp ./tfplan ./terraform/tf.plan
        cd terraform
        terraform apply ./tf.plan
